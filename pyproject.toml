[build-system]
requires = ["nanobind", "scikit-build-core>=0.8", "setuptools_scm>=8"]
build-backend = "scikit_build_core.build"

[project]
name = "nifty-ls"
description = "A fast Lomb-Scargle periodogram. It's nifty, and uses a NUFFT."
readme = "README.md"
authors = [{ name = "Lehman Garrison" },
           { name = "Dan Foreman-Mackey" },
           { name = "Yuwei (Peter) Sun" },
           ]
requires-python = ">=3.9"
license = { file = "LICENSE" }
urls = { Homepage = "https://github.com/flatironinstitute.org/nifty-ls" }
dependencies = [
    "numpy",
    "finufft >= 2.3",
]
dynamic = ["version"]

[project.optional-dependencies]
cuda11 = ["cufinufft", "cupy-cuda11x"]
cuda12 = ["cufinufft", "cupy-cuda12x"]
cuda = ["cufinufft", "cupy-cuda12x"]

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/nifty_ls/version.py"]
minimum-version = "0.8"
build-dir = "build/{wheel_tag}"
# editable.rebuild = true  # use with --no-build-isolation
wheel.py-api = "cp312"

# For debugging:
# cmake.build-type = "Debug"
# cmake.verbose = true
# install.strip = false

[tool.setuptools_scm]
version_file = "src/nifty_ls/version.py"

[tool.pytest.ini_options]
# is there a way to set this in the test script?
addopts = [
    "--benchmark-group-by=group,param:Nf",
    "--benchmark-disable-gc",
    "--benchmark-columns=min,mean,stddev,rounds,iterations",
    "--benchmark-min-rounds=3",
    ]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.cibuildwheel]
archs = "auto64"
build-frontend = "build[uv]"
enable = "cpython-freethreading"
test-command = "pytest -s --benchmark-skip {project}/tests"
test-groups = "test"
skip = "pp* *-musllinux_*"

[tool.cibuildwheel.linux]
repair-wheel-command = [
  "auditwheel repair -w {dest_dir} {wheel}",
  # run abi3audit on wheels tagged with abi3
  'case "$(basename {wheel})" in *"-abi3-"*) uvx abi3audit --strict --report {wheel};; esac',
]

[tool.cibuildwheel.macos]
repair-wheel-command = [
  'delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}',
  'case "$(basename {wheel})" in *"-abi3-"*) uvx abi3audit --strict --report {wheel};; esac',
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    {include-group = "test"}
]
test = [
    "astropy>=6",
    {include-group = "test-freethreaded"},
]
test-freethreaded = [
    "pytest>=8.4.1",
    "pytest-benchmark>=5.1.0",
]
